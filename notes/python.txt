Generate the requirements.txt File: Run the following command to create the requirements.txt file with all the installed packages:
pip freeze > requirements.txt

When you or someone else needs to install the packages from requirements.txt, simply run:
pip install -r requirements.txt

If you are using a tool like pip-tools (which provides pip-compile), you can use an exclude option to prevent certain packages from being added:
pip install pip-tools

Create a requirements.in file with the packages you want (omit the ones you don't want).
Add your direct dependencies to requirements.in as simple lines. 
Include Git Repositories (Optional)


Use pip-compile to generate requirements.txt:
pip-compile requirements.in


Ensure Repository Structure: Verify that the repository contains setup.py or pyproject.toml.
your_project/
├── app/
├── migrations/
├── requirements.in
├── requirements.txt
├── your_code.py
└── ...


Example of a Proper setup.py
If there are other dependencies not covered by your requirements.txt, add them here.

from setuptools import setup, find_packages
setup(
    name='your_project_name',
    version='1.0.0',
    packages=find_packages(),
    description='description of project',
    license='ISC',
    url='github_url',
    install_requires=[
        'Flask>=2.0.0',
        'SQLAlchemy==1.4.27',
        'requests>=2.25.1',
        # add other dependencies here
    ],
     extras_require={
        'dev': ['pytest', 'tox'],
        'docs': ['sphinx'],
    },
     classifiers=[
        'Programming Language :: Python :: 3',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
    ],
    # other arguments like author, description, etc.
)
